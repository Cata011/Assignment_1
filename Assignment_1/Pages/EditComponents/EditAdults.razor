@page "/EditAdults/{FamilyToEdit}"
@using Models
@using FileData
@namespace edit
<h3>EditAdults</h3>


<EditForm Model="@_adult" OnValidSubmit="@EditAdult">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <label> Adult @_counter:</label>

    <div class="form-group">
        First name:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.FirstName"/>
    </div>

    <div class="form-group">
        Last name:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.LastName"/>
    </div>

    <div class="form-group">
        Hair colour:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.HairColor"/>
    </div>

    <div class="form-group">
        Eye colour:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.EyeColor"/>
    </div>

    <div class="form-group">
        Age:<br/>
        <InputNumber @bind-Value="_adult.Age"/>
    </div>

    <div class="form-group">
        Weight:<br/>
        <InputNumber @bind-Value="_adult.Weight"/>
    </div>

    <div class="form-group">
        Height:<br/>
        <InputNumber @bind-Value="_adult.Height"/>
    </div>

    <div class="form-group">
        Sex:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.Sex"/>
    </div>

    <div class="form-group">
        Job:<br/>
        <InputTextArea rows="1" @bind-Value="_adult.JobTitle"/>
    </div>

    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Edit</button>
    </p>
</EditForm>
<br>


@code {

    [Parameter]
    public string FamilyToEdit { get; set; }

    FileContext _fileContext = new FileContext();
    private List<Adult> _adults = new List<Adult>();
    private Adult _adult = new Adult();
    private Family _family = new Family();
    private int _counter = 0;

    protected async override Task OnInitializedAsync()
    {
        Refresh();
    }

    private void EditAdult()
    {    
        _adults[_counter].Update(_adult);
        _counter++;
        if(_counter < _family.Adults.Count)
        {
            Refresh();
        }
        else
        {
            _family = _fileContext.Families.First(dummy => dummy.HouseNumber == _family.HouseNumber && dummy.StreetName.Equals(_family.StreetName));
            _family.Adults = _adults;
            _fileContext.SaveChanges();
            NavigationManager.NavigateTo("/ViewFamily");
        }
    }
    

    private void Refresh()
    {
        _family = Service.GetAllFamilies().FirstOrDefault(f => (f.StreetName + f.HouseNumber).Equals(FamilyToEdit));
        _adults = _family.Adults;
        _adult = _adults[_counter];
    }

}